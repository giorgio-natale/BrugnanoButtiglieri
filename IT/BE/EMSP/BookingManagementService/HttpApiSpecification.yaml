openapi: 3.0.2
info:
  title: eMSP-BookingManagementService
  version: 1.0.0
  description: A brand new API with no content.  Go nuts!
paths:
  /test:
    get:
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestComponent'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - Authenticated: []
      operationId: getTestComponent
    post:
      summary: ''
      operationId: post-test
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestComponent'
      description: Create a TestComponent
      security:
        - Authenticated: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestComponent'
  /health/ready:
    get:
      responses:
        '200':
          description: Ok
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - Authenticated: []
      operationId: isReady
components:
  schemas:
    TestComponent:
      title: MyTestComponent
      type: object
      x-stoplight:
        id: b36a75377da8e
      properties:
        welcomeMesage:
          type: string
        fee:
          type: object
          properties:
            value:
              type: integer
              format: int64
            currency:
              type: string
        status:
          $ref: '#/components/schemas/Status'
    Error:
      title: Root Type for Error
      description: ''
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          format: int32
          type: integer
          readOnly: true
        detail:
          type: string
        instance:
          type: string
      example:
        type: /errors/overlapping-booking-request
        title: Overlapping booking request
        status: 409
        detail: The requested booking timeframe overlaps with another planned booking.
        instance: /booking
    ReadyStatus:
      title: ReadyStatus
      required:
        - status
      x-stoplight:
        id: g4m3tyyi871e3
      type: object
      properties:
        status:
          type: string
          x-discriminator: ReadyStatus
    DeliveringStatus:
      title: DeliveringStatus
      required:
        - status
        - minutesLeft
      x-stoplight:
        id: 0xxhfd5zi3zdo
      type: object
      properties:
        status:
          type: string
          x-discriminator: DeliveringStatus
        minutesLeft:
          type: integer
    Status:
      oneOf:
        - $ref: '#/components/schemas/ReadyStatus'
        - $ref: '#/components/schemas/DeliveringStatus'
      discriminator:
        propertyName: status
        mapping:
          ready: '#/components/schemas/ReadyStatus'
          delivering: '#/components/schemas/DeliveringStatus'
  responses:
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: ''
  securitySchemes:
    Authenticated:
      scheme: bearer
      type: http
