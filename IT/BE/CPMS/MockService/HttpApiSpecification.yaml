openapi: 3.0.2
info:
  title: MockApi
  version: 1.0.0
  description: Mock api
servers:
  - url: 'http://mock-service'
tags:
  - name: cpms-charging-station-configuration
  - name: cpms-pricing
  - name: emsp-charging-station
  - name: charging-point-mock
paths:
  '/chargingStation/{chargingStationId}':
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingStation'
          description: ''
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - Authenticated: []
      operationId: getChargingStationConfiguration
      summary: ChargingStationConfiguration
      description: ''
      tags:
        - cpms-charging-station-configuration
    parameters:
      - name: chargingStationId
        schema:
          format: int64
          type: integer
        in: path
        required: true
  /chargingStation:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargingStation'
          description: ''
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - Authenticated: []
      summary: ChargingStationConfigurationList
      operationId: getChargingStationConfigurationList
      tags:
        - cpms-charging-station-configuration
  /chargingStationOverview:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargingStationOverview'
          description: ''
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - Authenticated: []
      operationId: getChargingStationOverviewList
      tags:
        - emsp-charging-station
  '/chargingStationOverview/{chargingStationId}':
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingStationOverview'
          description: ''
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - Authenticated: []
      operationId: getChargingStationOverview
      tags:
        - emsp-charging-station
    parameters:
      - name: chargingStationId
        schema:
          format: int64
          type: integer
        in: path
        required: true
  '/chargingStation/{chargingStationId}/pricing':
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pricing'
          description: ''
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - Authenticated: []
      operationId: getPricing
      tags:
        - cpms-pricing
    parameters:
      - name: chargingStationId
        schema:
          format: int64
          type: integer
        in: path
        required: true
  /chargingStation/pricing:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pricing'
          description: ''
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - Authenticated: []
      operationId: getPricingList
      tags:
        - cpms-pricing
      summary: ''
  /chargingPointMock:
    put:
      summary: ''
      operationId: put-chargingPointMock
      responses:
        '200':
          description: OK
      tags:
        - charging-point-mock
      parameters:
        - schema:
            type: integer
            format: int64
          in: query
          name: chargingStationId
          required: true
        - schema:
            type: integer
            format: int64
          in: query
          name: chargingPointId
          required: true
        - schema:
            type: integer
            format: int64
          in: query
          name: socketId
          required: true
        - schema:
            $ref: '#/components/schemas/SocketStatus'
          in: query
          name: status
          required: true
    parameters: []
components:
  schemas:
    Error:
      title: Root Type for Error
      description: ''
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          format: int32
          type: integer
        detail:
          type: string
        instance:
          type: string
      example:
        type: /errors/charging-station-not-found
        title: Charging station not found
        status: 404
        detail: Charging station not found
        instance: /charging-station
    SocketType:
      enum:
        - SLOW
        - FAST
        - RAPID
      type: string
      example: SLOW
    ChargingPointMode:
      type: string
      enum:
        - IN_ADVANCE
        - ON_THE_FLY
      example: IN_ADVANCE
    ChargingPoint:
      required:
        - chargingPointId
        - chargingPointCode
        - mode
        - socketList
      type: object
      properties:
        chargingPointId:
          type: integer
          format: int64
          readOnly: true
        chargingPointCode:
          type: string
        mode:
          $ref: '#/components/schemas/ChargingPointMode'
        socketList:
          type: array
          items:
            $ref: '#/components/schemas/Socket'
      example:
        chargingPointId: 3
        chargingPointCode: A
        mode: IN_ADVANCE
        socketList:
          - socketId: 1
            socketCode: '2'
            type: SLOW
    ChargingStation:
      type: object
      properties:
        chargingStationId:
          format: int64
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        city:
          type: string
          readOnly: true
        address:
          type: string
          readOnly: true
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        chargingPointList:
          type: array
          items:
            $ref: '#/components/schemas/ChargingPoint'
      required:
        - chargingStationId
        - name
        - city
        - address
        - latitude
        - longitude
        - chargingPointList
      example:
        chargingStationId: 1
        name: Go Electric Station
        address: 'Via Vittorio Veneto, 8'
        city: Milan
        latitude: 45.475786
        longitude: 9.202887
        chargingPointList:
          - chargingPointId: 3
            chargingPointCode: A
            mode: IN_ADVANCE
            socketList:
              - socketId: 3
                socketCode: '2'
                type: SLOW
        x-stoplight:
          id: 51fd8331c613e
    Price:
      title: Root Type for Price
      description: ''
      type: object
      properties:
        currency:
          type: string
        amount:
          format: double
          type: number
      example:
        currency: EUR
        amount: 1
    Pricing:
      title: Root Type for Pricing
      description: ''
      required:
        - price
        - percentageOffer
        - chargingStationId
      type: object
      properties:
        price:
          $ref: '#/components/schemas/Price'
        percentageOffer:
          format: double
          type: number
        chargingStationId:
          format: int64
          description: ''
          type: integer
      example:
        chargingStationId: 1
        price:
          currency: EUR
          amount: 1
        percentageOffer: 0.1
    ChargingStationOverview:
      title: Root Type for ChargingStation
      description: ''
      required:
        - chargingStationId
        - pricePerKWh
        - offerPercentage
        - name
        - city
        - address
        - latitude
        - longitude
      type: object
      properties:
        chargingStationId:
          format: int64
          type: integer
          readOnly: true
        name:
          type: string
        address:
          type: string
        city:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        pricePerKWh:
          $ref: '#/components/schemas/Price'
        offerPercentage:
          format: double
          type: number
      example:
        chargingStationId: 1
        name: Go Electric Station
        address: 'Via Vittorio Veneto, 8'
        city: Milan
        latitude: 45.475786
        longitude: 9.202887
        pricePerKWh:
          currency: EUR
          amount: 1
        offerPercentage: 0.1
    Socket:
      title: Root Type for Socket
      description: ''
      required:
        - socketId
        - socketCode
        - type
      type: object
      properties:
        socketId:
          type: integer
          format: int64
        socketCode:
          type: string
        type:
          $ref: '#/components/schemas/SocketType'
      example:
        socketId: 1
        socketCode: B
        type: SLOW
    SocketStatus:
      title: SocketStatus
      x-stoplight:
        id: zhyi67axsw30f
      type: string
      enum:
        - SocketAvailableStatus
        - SocketReadyStatus
        - SocketDeliveringStatus
        - SocketStoppedStatus
  responses:
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: ''
  securitySchemes:
    Authenticated:
      scheme: bearer
      type: http
